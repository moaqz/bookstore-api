basePath: /api/v1
definitions:
  domain.GetUserResponse:
    properties:
      email:
        type: string
      id:
        type: integer
      is_staff:
        type: boolean
    type: object
  domain.LoginRequest:
    properties:
      email:
        type: string
      password:
        maxLength: 28
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  domain.SignUpRequest:
    properties:
      email:
        type: string
      password:
        maxLength: 28
        minLength: 8
        type: string
      password_confirmation:
        maxLength: 28
        minLength: 8
        type: string
    required:
    - email
    - password
    - password_confirmation
    type: object
  domain.TokenResponse:
    properties:
      message:
        type: string
      token:
        type: string
    type: object
host: localhost:3009
info:
  contact: {}
  description: This API returns information about books.
  license:
    name: MIT
    url: https://mit-license.org/
  termsOfService: http://swagger.io/terms/
  title: Book Store API
  version: "1.0"
paths:
  /user/{user_id}:
    delete:
      consumes:
      - application/json
      description: Delete the current user account
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      - description: With the bearer started.
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      summary: Delete current user
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Get id, username, email, first name, last name and bio from a user
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.GetUserResponse'
      summary: Get an user account data
      tags:
      - users
  /user/login:
    post:
      consumes:
      - application/json
      description: Login a user using email and password receive a JWT as a response
        from a successful login
      parameters:
      - description: 'Login data: email and password'
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/domain.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.TokenResponse'
      summary: Login a user
      tags:
      - users
  /user/signup:
    post:
      consumes:
      - application/json
      description: Register a user using email, username, password and password confirmation
      parameters:
      - description: 'Login data: email, password and password confirmation'
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/domain.SignUpRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.TokenResponse'
      summary: Register a new user
      tags:
      - users
swagger: "2.0"
